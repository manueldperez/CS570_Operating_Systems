1. I believe everything works perfectly under all conditions.
2. All code on p3helper was written by me.
3. I have four semaphores, one for the joggers, one for shooters, one for entering the gym and one for leaving the gym. The overall strategy to my solution is whenever a shooter or jogger comes into the gym, we want to increment the counter variable for that person's group. Then check whether there's already people from the other group in the gym floor, if there is, then you get blocked until they leave. If you're the first one of your group to enter and there's no people from the other group, then we want to block people from the other group from entering, so we do a sem_wait on the other group's semaphore. When people want to leave the gym, we first check what group the person trying to leave is, then we want to enter the critical region for leaving the gym, so no other person can alter the variables at the same time. Then we want to decrease the counter variable for either the jogger or shooter. Then if we're the last person of our group trying to leave the gym, then we want to unblock all of the people from the other group from entering. Which we do with a for loop. After that we can leave the critical region for leaving the gym.
